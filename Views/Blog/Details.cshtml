@model FYP_AgroNepalTrade.Models.BlogViewModels.BlogViewModel
@{
    ViewData["HeaderImage"] = $"../../UserFiles/Blogs/{Model.Blog.Id}.HeaderImage.jpg";
    ViewData["HeaderTitle"] = Model.Blog.Title;
    ViewData["AuthorName"] = $"{Model.Blog.Author.FirstName} {Model.Blog.Author.LastName}";
    ViewData["PostDate"] = Model.Blog.UpdatedOn.ToString("MMM d, yyyy");
    ViewData["AuthorId"] = Model.Blog.Author.Id;
}
@using System.Web


<header class="masthead" style="background-image:url('@ViewData["HeaderImage"]')">
    <div class="overlay">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-md-10 mx-auto">
                    <div class="Blog-heading">
                        <h1>@ViewData["HeaderTitle"]</h1>
                        <span class="meta">
                            Posted by
                            <a href="#">@ViewData["AuthorName"]</a>
                            on @ViewData["PostDate"]
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<article>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                @Html.Raw(HttpUtility.HtmlDecode(Model.Blog.Content))
            </div>
        </div>
        <div class="row mt-5">
            <div class="col-lg-8 col-md-10 mx-auto">
                <h3 class="mb-5">@Model.Blog.Comments.Count() Comments</h3>
                <ul class="comment-list comment-top" list="@Model.Blog.Comments" count="0">
                    @foreach (var comment in Model.Blog.Comments.Where(comment => comment.Parent is null))
                    {
                        <li class="comment" style="margin-top: 30px;">
                            <div class="comment-body">
                                <h4 class="commenter-name">@comment.Author.FirstName @comment.Author.LastName</h4>
                                <div class="comment-date">@comment.CreatedOn.ToString("MMMM d, yyyy hh:mm tt")</div>
                                <p class="comment-message">@comment.Content</p>
                                @if (!User.Identity.IsAuthenticated)
                                {
                                    <a class="reply-btn btn" asp-area="Identity" asp-page="/Account/Login" asp-route-ReturnUrl="~/Blog/@Model.Blog.Id">Login to reply</a>
                                }
                                else
                                {
                                    <a aria-expanded="false" href="@($"#replyComment{comment.Id}")" data-toggle="collapse" class="reply-btn btn">Reply</a>
                                }
                            </div>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="collapse" id="@($"replyComment{comment.Id}")">
                                    <form asp-controller="Blog" asp-action="Comment">
                                        <input asp-for="Blog.Id" readonly hidden />
                                        <input asp-for="Comment.Parent.Id" value="@comment.Id" readonly hidden />
                                        <div class="form-group">
                                            <label for="comment">Write a reply</label>
                                            <textarea asp-for="Comment.Content" class="form-control" rows="3"></textarea>
                                            <button type="submit" class="btn btn-outline-primary post-btn">Post</button>
                                        </div>
                                    </form>
                                </div>
                            }
                            <ul class="comment-list" list="@comment.Comments" count="0" style="margin-left:30px; margin-top:0;">
                                @foreach (var reply in comment.Comments)
                                {
                                    <li class="comment">
                                        <div class="comment-body">
                                            <h3 class="commenter-name">@reply.Author.FirstName @reply.Author.LastName</h3>
                                            <div class="comment-date">@reply.CreatedOn.ToString("MMMM d, yyyy hh:mm tt")</div>
                                            <p class="comment-message">@reply.Content</p>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </li>
                        <hr />
                    }
                </ul>
                @if (User.Identity.IsAuthenticated)
                {
                    <div>
                        <form asp-controller="Blog" asp-action="Comment">
                            <input asp-for="Blog.Id" readonly hidden />
                            <div class="form-gorup">
                                <label for="comment">Comment</label>
                                <textarea asp-for="Comment.Content" class="form-control" rows="3" required></textarea>
                                <button type="submit" class="btn btn-outline-primary post-btn">Post</button>
                            </div>
                        </form>
                    </div>
                }
                else
                {
                    <a class="reply-btn btn" asp-area="Identity" asp-page="/Account/Login" asp-route-ReturnUrl="~/Blog/@Model.Blog.Id">Login to Commit on this Post</a>
                }
            </div>
        </div>
    </div>
</article>
@section Scripts{
    <script>
        $('[data-toggle="collapse"]').on('click', function () {
            var $this = $(this),
                $parent = typeof $this.data('parent') !== 'undefined' ? $($this.data('parent')) : undefined;
            if ($parent == undefined) {
                $this.find('.glyphicon').toggleClass('glyphicon-plus glyphicon-minus');
                return true;
            }
            var currentIcon = $this.find('.glyphicon');
            currentIcon.toggleClass('glyphicon-plus glyphicon-minus');
            $parent.find('.glyphicon').not(currentIcon).removeClass('glyphicon-minus').addClass('glyphicon-plus');
        });
    </script>
}